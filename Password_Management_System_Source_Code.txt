#include<stdio.h>
#include<string.h>
#include<stdlib.h>
struct credentials
{
    int acc_num;
    char password[8];
};
void read(struct credentials*);
int checkUsername();
int checkPassword();
void changePassword();
void recordData();
void deleteAccount();
void blue(void);
void red(void);
void yellow(void);
void black(void);
int tempu;
char tempp[8];
char tempp1[8];
FILE* fp;
void main()
{
    fp=fopen("Account_Details.txt","a");
    fclose(fp);
    int choice, id;
    struct credentials* account;
    account=(struct credentials*) malloc(sizeof(struct credentials));
    blue();
    printf("WELCOME TO PASSWORD MANAGEMENT SERVICES\n");
    do 
    {
        yellow();
        printf("MENU\n");
        printf("1. Add Account\n");
        printf("2. Change Password\n");
        printf("3. Delete Account\n");
        printf("4. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);
        switch (choice)
        {
            case 1:yellow();
                   printf("Enter an account number of upto 10 digits\n");
                   scanf("%d",&tempu);
                   int res=checkUsername();
                   if(res==0)
                   {
                    printf("Enter a password of 8 characters for username %d\n",tempu);
                    scanf("%s",tempp);
                    recordData();
                    fclose(fp);
                   }
                   else
                   {
                    red();
                    printf("An account with that username already exists\n");
                   }
                   blue();
                   printf("Account Successfully Added\n");
                   break;
            case 2:yellow();
                   printf("Enter the account number whose password you want to change\n");
                   scanf("%d",&tempu);
                   printf("Enter the current passowrd\n");
                   scanf("%s",tempp);
                   res=checkPassword();
                   if(res==0)
                   {
                    red();
                    printf("Incorrect Password\n");
                   }
                   else
                   {
                    printf("Enter new passord of upto 8 characters\n");
                    scanf("%s",tempp1);
                    changePassword();
                    blue();
                    printf("Password Successfully Changed\n");
                   }
                   break;
            case 3:yellow();
                   printf("Enter the account number which you want to delete\n");
                   scanf("%d",&tempu);
                   printf("Enter the password\n");
                   scanf("%s",tempp);   
                   int confirm=0;
                   res=checkPassword();
                   if(res==0)
                   {
                    printf("Incorrect Password\n");
                   }
                   else
                   {
                    printf("Are you sure you want to delete your account\n");
                    printf("Enter 1 if you are sure or enter 0\n");
                    scanf("%d",&confirm);
                    if(confirm==1)
                    deleteAccount();
                    blue();
                    printf("Account Successfully Deleted\n");
                   }
                   break;
            case 4:blue();
                   printf("Thank You\n");
                   break;
            default:red();
                    printf("Invalid Choice\n");              
        } 
    }while(choice!=4);
}
int checkUsername()
{
    fp=fopen("Account_Details.txt","r");
    int found=0;
    struct credentials* acc;
    acc=(struct credentials*) malloc(sizeof(struct credentials));
    while(!feof(fp))
    {
        read(acc);
        if(acc->acc_num==tempu)
        {
            found++;
            break;
        }
    }
    fclose(fp);
    return(found);
}
int checkPassword()
{
    fp=fopen("Account_Details.txt","r");
    int match=0;
    struct credentials* acc;
    acc=(struct credentials*) malloc(sizeof(struct credentials));
    while(!feof(fp))
    {
        read(acc);
        if(strcmp(acc->password,tempp)==0)
        {
            match++;
            break;
        }
    }
    fclose(fp);
    return(match);
}
void changePassword()
{
    FILE* fp1;
    fp1=fopen("temp.txt","w");
    fp=fopen("Account_Details.txt","r");
    struct credentials* acc;
    acc=(struct credentials*) malloc(sizeof(struct credentials));
    while(!feof(fp))
    {
        read(acc);
        if(acc->acc_num==tempu)
        {
            fprintf(fp1,"Username: %d\nPassword: %s\n",tempu,tempp1);
        }
        else
        {
            fprintf(fp1,"Username: %d\nPassword: %s\n",acc->acc_num,acc->password);
        }
    }
    fclose(fp);
    fclose(fp1);
    remove("Account_Details.txt");
    fp=fopen("Account_Details.txt","w");
    fp1=fopen("temp.txt","r");
    char ch=fgetc(fp1);
    while(ch!=EOF)
    {
        fputc(ch,fp);
        ch=fgetc(fp1);
    }
    fclose(fp);
    fclose(fp1);
    remove("temp.txt");
}
void deleteAccount()
{
    FILE* fp1;
    fp1=fopen("tempacc.txt","w");
    fp=fopen("Account_Details.txt","r");
    struct credentials* acc;
    acc=(struct credentials*) malloc(sizeof(struct credentials));
    while(!feof(fp))
    {
        read(acc);
        if(acc->acc_num!=tempu)
        {
            fprintf(fp1,"Username: %d\nPassword: %s\n",acc->acc_num,acc->password);
        }
    }
    fclose(fp);
    fclose(fp1);
    remove("Account_Details.txt");
    fp=fopen("Account_Details.txt","w");
    fp1=fopen("tempacc.txt","r");
    char ch=fgetc(fp1);
    while(ch!=EOF)
    {
        fputc(ch,fp);
        ch=fgetc(fp1);
    }
    fclose(fp);
    fclose(fp1);
    remove("temp.txt");
}
void read(struct credentials* a)
{
    fscanf(fp,"Username: %d\nPassword: %s\n",&a->acc_num,a->password);
}
void recordData()
{
    fp=fopen("Account_Details.txt","a");
    fprintf(fp,"Username: %d\nPassword: %s\n",tempu,tempp);   
}
void blue()
{
    printf("\033[0;34m");
}
void red()
{
    printf("\033[1;31m");
}
void yellow()
{
    printf("\033[0;33m");
}
void black()
{
    printf("\033[0;37m");
}